---
layout: post
title:  "Algo Day 8"
date:   2023-01-04 16:54:00 -0000
categories: [Algorithm,String]
---

<div class="post-categories">
  Categories:
  {% if post %}
    {% assign categories = post.categories %}
  {% else %}
    {% assign categories = page.categories %}
  {% endif %}
  {% for category in categories %}
    {% if categories[-1] == category %}
        <a href="{{site.baseurl}}/categories/#{{category|slugize}}">{{category}}</a>
    {% else %}
        <a href="{{site.baseurl}}/categories/#{{category|slugize}}">{{category}},</a>
    {% endif %}
  {% unless forloop.last %}&nbsp;{% endunless %}
  {% endfor %}
</div>
&nbsp;


### Problem 1:

[344. Reverse String](https://leetcode.com/problems/reverse-string/)

* First Thought:

  1. two pointer

&nbsp;

* Thoughts After Looking At The Solution:

  1. python swap: s[left], s[right] = s[right], s[left]

&nbsp;

* Difficulties Encountered:

  1. NA

&nbsp;

* Conclusion
  1. NA

&nbsp;

### Problem 2:

[541. Reverse String II](https://leetcode.com/problems/reverse-string-ii/)

* First Thought:

  1. dealing with corner cases will be tricky. 1) left < k 2) left >= k and left <= 2k 3) left > 2k

&nbsp;

* Thoughts After Looking At The Solution:

  1. NA

&nbsp;

* Difficulties Encountered:

  1. assigning back to original string

&nbsp;

* Conclusion:

  1. python[0:999], if 999 > the number of element left, the list will return its last element. Thus reduce the need to deal with some corner cases.

&nbsp;

### Problem 3:

[151. Reverse Words in a String](https://leetcode.com/problems/reverse-words-in-a-string/)

* First Thought:

  1. split words and add them into lists.

&nbsp;

* Thoughts After Looking At The Solution:

  1. We can reverse the string fisrt, then reverse the words individually.

&nbsp;

* Difficulties Encountered:

  1. removing extra whitespaces.

&nbsp;

* Conclusion:

  1. We should use two pointers, one at the beginning, one at the end of the string to deal with whitespaces.

&nbsp;


### Tips:

* how to solve left rotate string problem:
    1. rotate the whole string
    2. rotate first n - k part
    3. rotate last k part